pluginManagement {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }

    plugins {
        id 'com.android.application' version '8.1.0'
        id 'com.android.library' version '8.1.0'
        id 'org.jetbrains.kotlin.android' version '1.7.10'
        id 'com.google.gms.google-services' version '4.3.14'
        id 'dev.flutter.flutter-gradle-plugin'
    }
}

def localProperties = new Properties()
def localPropertiesFile = new File(rootDir, "local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader -> localProperties.load(reader) }
}

def flutterSdkPath = localProperties.getProperty('flutter.sdk')
if (flutterSdkPath == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

includeBuild("$flutterSdkPath/packages/flutter_tools/gradle")

include ':app'

def flutterProjectRoot = rootDir.toPath().parent

def plugins = new Properties()
def pluginsFile = new File(flutterProjectRoot.toFile(), '.flutter-plugins')
if (pluginsFile.exists()) {
    pluginsFile.withReader('UTF-8') { reader -> plugins.load(reader) }
}

plugins.each { name, path ->
    def pluginDirectory = flutterProjectRoot.resolve(path).resolve('android').toFile()
    include ":$name"
    project(":$name").projectDir = pluginDirectory
} 